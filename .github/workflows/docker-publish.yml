# Build and publish a Docker image.
name: Build and publish docker images

on:
  push:
    branches: ["main"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  # Job 1: Update Lock File
  update-lockfile:
    name: Update Python Lock File
    runs-on: ubuntu-latest
    outputs:
      scm_version: ${{ steps.get_scm_version.outputs.scm_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          submodules: true

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "==0.5"

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Update lock file
        run: uv lock --upgrade-package nomad-lab

      # Commits any changes made to the lockfile
      - name: Commit lock file changes
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git add uv.lock
          if [[ `git status --porcelain` ]]; then
            git commit -m "Update lockfile"
            git push origin -o ci.skip # prevent triggering the pipeline again
          fi

      - name: Get SCM Version
        id: get_scm_version
        run: |
          SCM_VERSION=$(uvx --with setuptools_scm python -m setuptools_scm)
          echo "SCM version: $SCM_VERSION"
          echo "scm_version=$SCM_VERSION" >> "$GITHUB_OUTPUT"

  # Job 2: Build and Push Docker Image
  docker-publish:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: update-lockfile

    strategy:
      fail-fast: false
      matrix:
        service: [app, jupyter]

    env:
      SETUPTOOLS_SCM_PRETEND_VERSION_FOR_NOMAD_DISTRIBUTION: ${{ needs.update-lockfile.outputs.scm_version }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          submodules: true

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}${{ matrix.service == 'jupyter' && '/jupyter' || '' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: "SETUPTOOLS_SCM_PRETEND_VERSION_FOR_NOMAD_DISTRIBUTION=${{ env.SETUPTOOLS_SCM_PRETEND_VERSION_FOR_NOMAD_DISTRIBUTION }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: ${{ matrix.service == 'jupyter' && 'jupyter' || 'final' }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
