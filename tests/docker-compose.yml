name: nomad-distro-test
services:
  # broker for celery
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3.11.5
    container_name: rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "--silent", "--quiet", "ping"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  # the search engine
  elastic:
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
    container_name: elastic
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - discovery.type=single-node
    volumes:
      - elastic:/usr/share/elasticsearch/data
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "--fail"
        - "--silent"
        - "http://elastic:9200/_cat/health"
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s

  # the user data db
  mongo:
    restart: unless-stopped
    image: mongo:5.0.6
    container_name: mongo
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - mongo:/data/db
      - ./.volumes/mongo:/backup
    command: mongod --logpath=/dev/null # --quiet
    healthcheck:
      test:
        - "CMD"
        - "mongo"
        - "mongo:27017/test"
        - "--quiet"
        - "--eval"
        - "'db.runCommand({ping:1}).ok'"
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

  keycloak:
    image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-test-keycloak:v1.0
    platform: linux/amd64
    container_name: keycloak
    environment:
      # clashes with imported admin user in master realm
      # - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      # - KC_BOOTSTRAP_ADMIN_PASSWORD=password
      - KC_LOG_LEVEL=info
      - KC_HOSTNAME_DEBUG=true
      - KC_METRICS_ENABLED=true
      - KC_HEALTH_ENABLED=true
    command:
      - start-dev
      - --import-realm
      - --verbose
    ports:
      - 8080:8080
    healthcheck:
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
      test: bash /opt/keycloak/bin/healthcheck_keycloak.sh || exit 1

  app:
    restart: unless-stopped
    image: ${APP_IMAGE:-ghcr.io/fairmat-nfdi/nomad-distro-template:main}
    platform: linux/amd64
    container_name: app
    command:
      [
        "python",
        "-m",
        "nomad.cli",
        "admin",
        "run",
        "appworker",
        "--app-host",
        "0.0.0.0",
      ]
    environment:
      NOMAD_SERVICE: nomad_distro_test
      NOMAD_SERVICES_API_PORT: 80
      NOMAD_FS_EXTERNAL_WORKING_DIRECTORY: "$PWD"
      NOMAD_RABBITMQ_HOST: rabbitmq
      NOMAD_ELASTIC_HOST: elastic
      NOMAD_MONGO_HOST: mongo
      NOMAD_LOGSTASH_HOST: logtransfer
    depends_on:
      rabbitmq:
        condition: service_healthy
      elastic:
        condition: service_healthy
      mongo:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    volumes:
      - ./nomad.yaml:/app/nomad.yaml
    ports:
      - 8000:8000
    healthcheck:
      test:
        - "CMD"
        - "curl"
        - "--fail"
        - "--silent"
        - "http://localhost:8000/-/health"
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s

volumes:
  mongo:
    name: "mongo"
  elastic:
    name: "elastic"
  rabbitmq:
    name: "rabbitmq"
